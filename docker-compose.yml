services:

  app_game_front:
    container_name: app_game_front
    build:
      context: .
      target: app_nginx
      args:
        - APP_DIR=.
        - NGINX_CONF_DIR=./.docker/nginx
        - INSTALL_DIR=app
        - NGINX_VERSION=1.20
        - TZ=Europe/Paris
    ports:
      - "80:80"
    volumes:
      - php_socket:/var/run/php
    networks:
      - game

  app_game:
    container_name: app_game
    restart: unless-stopped
    build:
      context: .
      target: app_php
      args:
        - APP_ENV=dev
        - APP_DIR=.
        - PHP_CONF_DIR=./.docker/php
        - ENTRYPOINT_FILE=docker-entrypoint.sh
        - INSTALL_DIR=app
        - PHP_VERSION=8.3
        - TZ=Europe/Paris
    volumes:
      - php_socket:/var/run/php
    networks:
      - game

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - game


  database:
    container_name: database
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - game

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  php_socket:

networks:
  game: